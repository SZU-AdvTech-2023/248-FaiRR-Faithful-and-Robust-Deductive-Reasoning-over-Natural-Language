nohup: ignoring input
/home/data1/linkiling/wjn/FaiRR-main/main.py:40: UserWarning: 
The version_base parameter is not specified.
Please specify a compatability version level, or None.
Will assume defaults for version 1.1
  initialize(config_path="./configs/")
Global seed set to 42
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.dense.bias', 'lm_head.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.dense.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.dense.bias', 'lm_head.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.dense.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.dense.bias', 'lm_head.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.dense.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.dense.bias', 'lm_head.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.dense.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
Composed hydra config:

 scheduler:
  lr_scheduler: fixed
  warmup_updates: 0
optimizer:
  optimizer: adamw
  weight_decay: 0.01
  adam_epsilon: 1.0e-08
  gradient_clip_val: 0
model:
  model: fairr_inference
  arch: null
  hf_name: null
dataset:
  dataset: pwq_leq_0to3_OWA_rule
  train_dataset: pwq_leq_0to3_OWA_rule
  dev_dataset: pwq_leq_0to3_OWA_rule
  test_dataset: pwq_leq_0to3_OWA_rule
setup:
  train_batch_size: 16
  eval_batch_size: 16
  accumulate_grad_batches: 1
  num_workers: 8
  fp16: false
  gpus: 1
training:
  evaluate_ckpt: true
  eval_splits: test
seed: 42
max_epochs: 10
learning_rate: 0.001
save_checkpoint: true
adam_epsilon: 1.0e-06
weight_decay: 0.0

Building trainer...
Loading pwur_leq_3_eq_0_name_OWA dataset
data being used from the folder = ../data/processed/pwur_leq_3_eq_0_name/OWA/test/
Loading fairr_inference - None model...
{'override': 'fairr_inference,evaluate', 'logger': True, 'checkpoint_callback': None, 'enable_checkpointing': True, 'default_root_dir': None, 'gradient_clip_val': 0, 'gradient_clip_algorithm': None, 'process_position': 0, 'num_nodes': 1, 'num_processes': 1, 'devices': None, 'gpus': 1, 'auto_select_gpus': False, 'tpu_cores': None, 'ipus': None, 'log_gpu_memory': None, 'progress_bar_refresh_rate': None, 'enable_progress_bar': True, 'overfit_batches': 0.0, 'track_grad_norm': -1, 'check_val_every_n_epoch': 1, 'fast_dev_run': False, 'accumulate_grad_batches': 1, 'max_epochs': 10, 'min_epochs': None, 'max_steps': -1, 'min_steps': None, 'max_time': None, 'limit_train_batches': 1.0, 'limit_val_batches': 1.0, 'limit_test_batches': 1.0, 'limit_predict_batches': 1.0, 'val_check_interval': 1.0, 'flush_logs_every_n_steps': None, 'log_every_n_steps': 50, 'accelerator': None, 'strategy': None, 'sync_batchnorm': False, 'precision': 32, 'enable_model_summary': True, 'weights_summary': 'top', 'weights_save_path': None, 'num_sanity_val_steps': 2, 'resume_from_checkpoint': None, 'profiler': None, 'benchmark': False, 'deterministic': False, 'reload_dataloaders_every_n_epochs': 0, 'reload_dataloaders_every_epoch': False, 'auto_lr_find': False, 'replace_sampler_ddp': True, 'detect_anomaly': False, 'auto_scale_batch_size': False, 'prepare_data_per_node': None, 'plugins': None, 'amp_backend': 'native', 'amp_level': None, 'move_metrics_to_cpu': False, 'multiple_trainloader_mode': 'max_size_cycle', 'stochastic_weight_avg': False, 'terminate_on_nan': None, 'optimizer': 'adamw', 'model': 'fairr_inference', 'arch': None, 'hf_name': None, 'padding': 0, 'learning_rate': 0.001, 'adam_epsilon': 1e-06, 'warmup_updates': 0, 'weight_decay': 0.0, 'lr_scheduler': 'fixed', 'freeze_epochs': -1, 'train_batch_size': 16, 'eval_batch_size': 16, 'ruleselector_ckpt': '../saved/fairr_ruleselector_pwq_leq_0to3_OWA_rule_roberta_large_27_11_2023_95030f26/checkpoints/epoch=9-step=112779.ckpt', 'factselector_ckpt': '../saved/fairr_factselector_pwq_leq_0to3_OWA_fact_roberta_large_28_11_2023_c3929f14/checkpoints/epoch=8-step=38978.ckpt', 'reasoner_ckpt': '../saved/fairr_reasoner_pw_leq_0to3_OWA_reasoner_t5_large_28_11_2023_0e237b32/checkpoints/epoch=0-step=976.ckpt', 'cls_dropout': 0.1, 'dataset': 'pwur_leq_3_eq_0_name_OWA', 'train_dataset': 'pwq_leq_0to3_OWA_rule', 'dev_dataset': 'pwq_leq_0to3_OWA_rule', 'test_dataset': 'pwq_leq_0to3_OWA_rule', 'num_workers': 8, 'seed': 42, 'name': 'fairr_inference_pwur_leq_3_eq_0_name_OWA_None_05_12_2023_2e27bc6a', 'log_db': 'manual_runs', 'tag_attrs': 'model,dataset,arch', 'ckpt_path': '', 'eval_splits': 'test', 'debug': False, 'save_checkpoint': True, 'resume_training': False, 'evaluate_ckpt': True, 'fp16': False, 'root_dir': '../saved/fairr_inference_pwur_leq_3_eq_0_name_OWA_None_05_12_2023_2e27bc6a'}
Testing the best model...
Evaluating on split: test
Testing: 0it [00:00, ?it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 13. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   0%|          | 1/1054 [00:01<22:29,  1.28s/it]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 30. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   0%|          | 2/1054 [00:01<16:22,  1.07it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 35. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   0%|          | 3/1054 [00:01<12:10,  1.44it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 23. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   0%|          | 5/1054 [00:01<09:01,  1.94it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 32. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   1%|          | 6/1054 [00:01<07:03,  2.47it/s]Testing:   1%|          | 8/1054 [00:02<05:17,  3.30it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 14. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 16. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   1%|          | 10/1054 [00:02<04:08,  4.20it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 43. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   1%|          | 11/1054 [00:02<03:25,  5.08it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 20. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   1%|          | 12/1054 [00:02<02:55,  5.95it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 26. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   1%|▏         | 14/1054 [00:02<02:24,  7.20it/s]Testing:   2%|▏         | 16/1054 [00:02<02:01,  8.52it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 15. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   2%|▏         | 18/1054 [00:02<01:53,  9.12it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 27. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(

Proof Accuracy: 100.0

Testing:   2%|▏         | 20/1054 [00:03<01:52,  9.21it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 18. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   2%|▏         | 22/1054 [00:03<01:43,  9.96it/s]Testing:   2%|▏         | 24/1054 [00:03<01:37, 10.56it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 29. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   2%|▏         | 26/1054 [00:03<01:45,  9.73it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 28. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 12. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   3%|▎         | 28/1054 [00:03<01:45,  9.68it/s]Testing:   3%|▎         | 30/1054 [00:04<01:44,  9.80it/s]Testing:   3%|▎         | 32/1054 [00:04<01:45,  9.71it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 17. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   3%|▎         | 34/1054 [00:04<01:44,  9.79it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 31. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   3%|▎         | 36/1054 [00:04<01:43,  9.83it/s]Testing:   4%|▎         | 38/1054 [00:04<01:31, 11.09it/s]
Proof Accuracy: 100.0

Testing:   4%|▍         | 40/1054 [00:04<01:34, 10.75it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 21. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   4%|▍         | 42/1054 [00:05<01:34, 10.71it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 22. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   4%|▍         | 44/1054 [00:05<01:36, 10.44it/s]Testing:   4%|▍         | 46/1054 [00:05<01:33, 10.74it/s]Testing:   5%|▍         | 48/1054 [00:05<01:39, 10.08it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 24. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   5%|▍         | 50/1054 [00:06<01:47,  9.34it/s]Testing:   5%|▍         | 51/1054 [00:06<01:59,  8.37it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 11. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   5%|▌         | 53/1054 [00:06<01:43,  9.64it/s]Testing:   5%|▌         | 55/1054 [00:06<01:43,  9.70it/s]Testing:   5%|▌         | 57/1054 [00:06<01:51,  8.94it/s]Testing:   6%|▌         | 59/1054 [00:06<01:44,  9.56it/s]
Proof Accuracy: 100.0

Testing:   6%|▌         | 61/1054 [00:07<01:44,  9.50it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 36. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   6%|▌         | 62/1054 [00:07<01:47,  9.22it/s]Testing:   6%|▌         | 64/1054 [00:07<01:37, 10.11it/s]Testing:   6%|▋         | 66/1054 [00:07<01:29, 11.09it/s]Testing:   6%|▋         | 68/1054 [00:07<01:38,  9.97it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 34. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:   7%|▋         | 70/1054 [00:08<01:39,  9.89it/s]Testing:   7%|▋         | 72/1054 [00:08<01:27, 11.16it/s]Testing:   7%|▋         | 74/1054 [00:08<01:32, 10.62it/s]Testing:   7%|▋         | 76/1054 [00:08<01:27, 11.18it/s]Testing:   7%|▋         | 78/1054 [00:08<01:31, 10.63it/s]
Proof Accuracy: 100.0

Testing:   8%|▊         | 80/1054 [00:08<01:23, 11.67it/s]Testing:   8%|▊         | 82/1054 [00:09<01:27, 11.10it/s]Testing:   8%|▊         | 84/1054 [00:09<01:24, 11.45it/s]Testing:   8%|▊         | 86/1054 [00:09<01:23, 11.56it/s]Testing:   8%|▊         | 88/1054 [00:09<01:19, 12.14it/s]Testing:   9%|▊         | 90/1054 [00:09<01:17, 12.39it/s]Testing:   9%|▊         | 92/1054 [00:09<01:30, 10.64it/s]Testing:   9%|▉         | 94/1054 [00:10<01:32, 10.37it/s]Testing:   9%|▉         | 96/1054 [00:10<01:34, 10.14it/s]Testing:   9%|▉         | 98/1054 [00:10<01:31, 10.42it/s]
Proof Accuracy: 100.0

Testing:   9%|▉         | 100/1054 [00:10<01:32, 10.32it/s]Testing:  10%|▉         | 102/1054 [00:10<01:28, 10.70it/s]Testing:  10%|▉         | 104/1054 [00:11<01:33, 10.12it/s]Testing:  10%|█         | 106/1054 [00:11<01:27, 10.89it/s]Testing:  10%|█         | 108/1054 [00:11<01:20, 11.78it/s]Testing:  10%|█         | 110/1054 [00:11<01:13, 12.77it/s]Testing:  11%|█         | 112/1054 [00:11<01:15, 12.47it/s]Testing:  11%|█         | 114/1054 [00:11<01:24, 11.11it/s]Testing:  11%|█         | 116/1054 [00:12<01:17, 12.13it/s]Testing:  11%|█         | 118/1054 [00:12<01:26, 10.76it/s]
Proof Accuracy: 100.0

Testing:  11%|█▏        | 120/1054 [00:12<01:20, 11.64it/s]Testing:  12%|█▏        | 122/1054 [00:12<02:04,  7.49it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 33. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:  12%|█▏        | 124/1054 [00:13<01:50,  8.41it/s]Testing:  12%|█▏        | 126/1054 [00:13<01:39,  9.36it/s]Testing:  12%|█▏        | 128/1054 [00:13<01:34,  9.80it/s]Testing:  12%|█▏        | 130/1054 [00:13<01:28, 10.46it/s]Testing:  13%|█▎        | 132/1054 [00:13<01:28, 10.39it/s]Testing:  13%|█▎        | 134/1054 [00:13<01:26, 10.62it/s]Testing:  13%|█▎        | 136/1054 [00:14<01:20, 11.38it/s]Testing:  13%|█▎        | 138/1054 [00:14<01:21, 11.23it/s]
Proof Accuracy: 100.0

Testing:  13%|█▎        | 140/1054 [00:14<01:25, 10.64it/s]Testing:  13%|█▎        | 142/1054 [00:14<01:22, 11.09it/s]Testing:  14%|█▎        | 144/1054 [00:14<01:26, 10.51it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 25. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:  14%|█▍        | 146/1054 [00:15<01:28, 10.28it/s]Testing:  14%|█▍        | 148/1054 [00:15<01:27, 10.36it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 19. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:  14%|█▍        | 150/1054 [00:15<01:33,  9.68it/s]Testing:  14%|█▍        | 151/1054 [00:15<01:35,  9.42it/s]Testing:  14%|█▍        | 152/1054 [00:15<01:37,  9.24it/s]Testing:  15%|█▍        | 153/1054 [00:15<01:37,  9.21it/s]Testing:  15%|█▍        | 154/1054 [00:15<01:38,  9.12it/s]Testing:  15%|█▍        | 155/1054 [00:16<01:37,  9.27it/s]Testing:  15%|█▍        | 156/1054 [00:16<01:37,  9.23it/s]Testing:  15%|█▍        | 158/1054 [00:16<01:25, 10.46it/s]
Proof Accuracy: 100.0

Testing:  15%|█▌        | 160/1054 [00:16<01:22, 10.83it/s]Testing:  15%|█▌        | 162/1054 [00:16<01:26, 10.29it/s]Testing:  16%|█▌        | 164/1054 [00:16<01:17, 11.42it/s]Testing:  16%|█▌        | 166/1054 [00:16<01:17, 11.51it/s]Testing:  16%|█▌        | 168/1054 [00:17<01:21, 10.85it/s]Testing:  16%|█▌        | 170/1054 [00:17<01:26, 10.17it/s]Testing:  16%|█▋        | 172/1054 [00:17<01:26, 10.25it/s]Testing:  17%|█▋        | 174/1054 [00:17<01:37,  9.01it/s]Testing:  17%|█▋        | 175/1054 [00:18<01:37,  9.04it/s]Testing:  17%|█▋        | 176/1054 [00:18<01:35,  9.15it/s]Testing:  17%|█▋        | 178/1054 [00:18<01:34,  9.23it/s]
Proof Accuracy: 99.93055555555556

Testing:  17%|█▋        | 180/1054 [00:18<01:22, 10.55it/s]Testing:  17%|█▋        | 182/1054 [00:18<01:19, 11.01it/s]Testing:  17%|█▋        | 184/1054 [00:18<01:16, 11.30it/s]Testing:  18%|█▊        | 186/1054 [00:18<01:19, 10.89it/s]Testing:  18%|█▊        | 188/1054 [00:19<01:12, 11.99it/s]Testing:  18%|█▊        | 190/1054 [00:19<01:06, 13.07it/s]Testing:  18%|█▊        | 192/1054 [00:19<01:15, 11.41it/s]Testing:  18%|█▊        | 194/1054 [00:19<01:14, 11.62it/s]Testing:  19%|█▊        | 196/1054 [00:19<01:18, 10.99it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 40. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:  19%|█▉        | 198/1054 [00:20<01:22, 10.32it/s]
Proof Accuracy: 99.9375

Testing:  19%|█▉        | 200/1054 [00:20<01:26,  9.92it/s]Testing:  19%|█▉        | 202/1054 [00:20<01:20, 10.62it/s]Testing:  19%|█▉        | 204/1054 [00:20<01:30,  9.39it/s]Testing:  20%|█▉        | 206/1054 [00:20<01:23, 10.20it/s]Testing:  20%|█▉        | 208/1054 [00:21<01:28,  9.55it/s]Testing:  20%|█▉        | 210/1054 [00:21<01:38,  8.58it/s]Testing:  20%|██        | 212/1054 [00:21<01:33,  8.97it/s]Testing:  20%|██        | 213/1054 [00:21<01:33,  8.99it/s]Testing:  20%|██        | 214/1054 [00:21<01:32,  9.12it/s]Testing:  20%|██        | 215/1054 [00:21<01:31,  9.21it/s]Testing:  20%|██        | 216/1054 [00:22<01:31,  9.17it/s]Testing:  21%|██        | 218/1054 [00:22<01:24,  9.92it/s]
Proof Accuracy: 99.91477272727273

Testing:  21%|██        | 220/1054 [00:22<01:20, 10.33it/s]Testing:  21%|██        | 222/1054 [00:22<01:18, 10.54it/s]Testing:  21%|██▏       | 224/1054 [00:22<01:11, 11.55it/s]Testing:  21%|██▏       | 226/1054 [00:22<01:10, 11.81it/s]Testing:  22%|██▏       | 228/1054 [00:23<01:20, 10.30it/s]Testing:  22%|██▏       | 230/1054 [00:23<01:12, 11.30it/s]Testing:  22%|██▏       | 232/1054 [00:23<01:14, 11.05it/s]Testing:  22%|██▏       | 234/1054 [00:23<01:07, 12.13it/s]Testing:  22%|██▏       | 236/1054 [00:23<01:16, 10.68it/s]Testing:  23%|██▎       | 238/1054 [00:23<01:15, 10.80it/s]
Proof Accuracy: 99.921875

Testing:  23%|██▎       | 240/1054 [00:24<01:19, 10.20it/s]Testing:  23%|██▎       | 242/1054 [00:24<01:19, 10.18it/s]Testing:  23%|██▎       | 244/1054 [00:24<01:16, 10.57it/s]Testing:  23%|██▎       | 246/1054 [00:24<01:11, 11.30it/s]Testing:  24%|██▎       | 248/1054 [00:24<01:16, 10.51it/s]Testing:  24%|██▎       | 250/1054 [00:25<01:17, 10.42it/s]Testing:  24%|██▍       | 252/1054 [00:25<01:26,  9.27it/s]Testing:  24%|██▍       | 254/1054 [00:25<01:17, 10.28it/s]Testing:  24%|██▍       | 256/1054 [00:25<01:14, 10.67it/s]Testing:  24%|██▍       | 258/1054 [00:25<01:12, 10.94it/s]
Proof Accuracy: 99.92788461538461

Testing:  25%|██▍       | 260/1054 [00:26<01:06, 11.99it/s]Testing:  25%|██▍       | 262/1054 [00:26<01:14, 10.66it/s]Testing:  25%|██▌       | 264/1054 [00:26<01:16, 10.36it/s]Testing:  25%|██▌       | 266/1054 [00:26<01:13, 10.72it/s]Testing:  25%|██▌       | 268/1054 [00:26<01:11, 10.94it/s]Testing:  26%|██▌       | 270/1054 [00:26<01:10, 11.10it/s]Testing:  26%|██▌       | 272/1054 [00:27<01:05, 12.02it/s]Testing:  26%|██▌       | 274/1054 [00:27<01:04, 12.08it/s]Testing:  26%|██▌       | 276/1054 [00:27<01:03, 12.31it/s]Testing:  26%|██▋       | 278/1054 [00:27<01:00, 12.81it/s]
Proof Accuracy: 99.91071428571429

Testing:  27%|██▋       | 280/1054 [00:27<01:01, 12.50it/s]Testing:  27%|██▋       | 282/1054 [00:27<01:03, 12.14it/s]Testing:  27%|██▋       | 284/1054 [00:28<01:06, 11.66it/s]Testing:  27%|██▋       | 286/1054 [00:28<01:13, 10.52it/s]Testing:  27%|██▋       | 288/1054 [00:28<01:09, 10.95it/s]Testing:  28%|██▊       | 290/1054 [00:28<01:04, 11.75it/s]Testing:  28%|██▊       | 292/1054 [00:28<01:11, 10.66it/s]Testing:  28%|██▊       | 294/1054 [00:29<01:16,  9.92it/s]Testing:  28%|██▊       | 296/1054 [00:29<01:12, 10.39it/s]Testing:  28%|██▊       | 298/1054 [00:29<01:11, 10.54it/s]
Proof Accuracy: 99.91666666666667

Testing:  28%|██▊       | 300/1054 [00:29<01:10, 10.69it/s]Testing:  29%|██▊       | 302/1054 [00:29<01:06, 11.37it/s]Testing:  29%|██▉       | 304/1054 [00:29<01:01, 12.23it/s]Testing:  29%|██▉       | 306/1054 [00:30<01:05, 11.38it/s]Testing:  29%|██▉       | 308/1054 [00:30<01:00, 12.39it/s]Testing:  29%|██▉       | 310/1054 [00:30<00:58, 12.82it/s]Testing:  30%|██▉       | 312/1054 [00:30<01:02, 11.87it/s]Testing:  30%|██▉       | 314/1054 [00:30<00:56, 13.19it/s]Testing:  30%|██▉       | 316/1054 [00:30<00:57, 12.82it/s]Testing:  30%|███       | 318/1054 [00:30<00:53, 13.86it/s]
Proof Accuracy: 99.90234375

Testing:  30%|███       | 320/1054 [00:31<00:52, 14.02it/s]Testing:  31%|███       | 322/1054 [00:31<00:57, 12.63it/s]Testing:  31%|███       | 324/1054 [00:31<01:04, 11.31it/s]Testing:  31%|███       | 326/1054 [00:31<01:03, 11.42it/s]Testing:  31%|███       | 328/1054 [00:31<01:06, 10.99it/s]Testing:  31%|███▏      | 330/1054 [00:32<01:12, 10.05it/s]Testing:  31%|███▏      | 332/1054 [00:32<01:15,  9.54it/s]Testing:  32%|███▏      | 333/1054 [00:32<01:22,  8.73it/s]Testing:  32%|███▏      | 334/1054 [00:32<01:20,  8.96it/s]Testing:  32%|███▏      | 336/1054 [00:32<01:10, 10.12it/s]Testing:  32%|███▏      | 338/1054 [00:32<01:07, 10.61it/s]
Proof Accuracy: 99.88970588235294

Testing:  32%|███▏      | 340/1054 [00:33<01:03, 11.17it/s]Testing:  32%|███▏      | 342/1054 [00:33<01:57,  6.08it/s]Testing:  33%|███▎      | 344/1054 [00:33<01:33,  7.58it/s]Testing:  33%|███▎      | 346/1054 [00:34<01:23,  8.49it/s]Testing:  33%|███▎      | 348/1054 [00:34<01:20,  8.81it/s]Testing:  33%|███▎      | 350/1054 [00:34<01:11,  9.90it/s]Testing:  33%|███▎      | 352/1054 [00:34<01:05, 10.75it/s]Testing:  34%|███▎      | 354/1054 [00:34<01:00, 11.56it/s]Testing:  34%|███▍      | 356/1054 [00:34<01:09, 10.04it/s]Testing:  34%|███▍      | 358/1054 [00:35<01:09, 10.00it/s]
Proof Accuracy: 99.86111111111111

Testing:  34%|███▍      | 360/1054 [00:35<01:09,  9.99it/s]Testing:  34%|███▍      | 362/1054 [00:35<01:13,  9.47it/s]Testing:  34%|███▍      | 363/1054 [00:35<01:15,  9.21it/s]Testing:  35%|███▍      | 365/1054 [00:35<01:08,  9.99it/s]Testing:  35%|███▍      | 367/1054 [00:36<01:02, 10.97it/s]Testing:  35%|███▌      | 369/1054 [00:36<00:58, 11.80it/s]Testing:  35%|███▌      | 371/1054 [00:36<01:03, 10.75it/s]Testing:  35%|███▌      | 373/1054 [00:36<01:09,  9.85it/s]Testing:  36%|███▌      | 375/1054 [00:36<01:03, 10.62it/s]Testing:  36%|███▌      | 377/1054 [00:37<01:10,  9.63it/s]Testing:  36%|███▌      | 379/1054 [00:37<01:11,  9.43it/s]
Proof Accuracy: 99.86842105263158

Testing:  36%|███▌      | 380/1054 [00:37<01:11,  9.38it/s]Testing:  36%|███▌      | 382/1054 [00:37<01:10,  9.55it/s]Testing:  36%|███▋      | 383/1054 [00:37<01:11,  9.38it/s]Testing:  36%|███▋      | 384/1054 [00:37<01:10,  9.55it/s]Testing:  37%|███▋      | 385/1054 [00:37<01:09,  9.66it/s]Testing:  37%|███▋      | 386/1054 [00:37<01:12,  9.27it/s]Testing:  37%|███▋      | 388/1054 [00:38<01:10,  9.39it/s]Testing:  37%|███▋      | 389/1054 [00:38<01:13,  9.06it/s]Testing:  37%|███▋      | 391/1054 [00:38<01:09,  9.56it/s]Testing:  37%|███▋      | 393/1054 [00:38<01:07,  9.77it/s]Testing:  37%|███▋      | 395/1054 [00:38<01:05, 10.04it/s]Testing:  38%|███▊      | 397/1054 [00:39<01:03, 10.33it/s]Testing:  38%|███▊      | 399/1054 [00:39<01:09,  9.44it/s]
Proof Accuracy: 99.875

Testing:  38%|███▊      | 400/1054 [00:39<01:09,  9.35it/s]Testing:  38%|███▊      | 401/1054 [00:39<01:10,  9.25it/s]Testing:  38%|███▊      | 403/1054 [00:39<00:59, 10.88it/s]Testing:  38%|███▊      | 405/1054 [00:39<01:03, 10.28it/s]Testing:  39%|███▊      | 407/1054 [00:40<01:02, 10.36it/s]Testing:  39%|███▉      | 409/1054 [00:40<00:58, 11.06it/s]Testing:  39%|███▉      | 411/1054 [00:40<01:00, 10.68it/s]Testing:  39%|███▉      | 413/1054 [00:40<01:01, 10.47it/s]Testing:  39%|███▉      | 415/1054 [00:40<01:04,  9.87it/s]Testing:  40%|███▉      | 417/1054 [00:41<01:03, 10.04it/s]Testing:  40%|███▉      | 419/1054 [00:41<01:03, 10.03it/s]
Proof Accuracy: 99.88095238095238

Testing:  40%|███▉      | 421/1054 [00:41<01:07,  9.34it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 39. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:  40%|████      | 422/1054 [00:41<01:14,  8.45it/s]Testing:  40%|████      | 424/1054 [00:41<01:09,  9.01it/s]Testing:  40%|████      | 426/1054 [00:41<01:03,  9.91it/s]Testing:  41%|████      | 428/1054 [00:42<01:05,  9.51it/s]Testing:  41%|████      | 430/1054 [00:42<01:05,  9.52it/s]Testing:  41%|████      | 431/1054 [00:42<01:06,  9.31it/s]Testing:  41%|████      | 432/1054 [00:42<01:07,  9.18it/s]Testing:  41%|████      | 434/1054 [00:42<00:59, 10.50it/s]Testing:  41%|████▏     | 436/1054 [00:42<01:00, 10.16it/s]Testing:  42%|████▏     | 438/1054 [00:43<00:54, 11.26it/s]
Proof Accuracy: 99.88636363636364

Testing:  42%|████▏     | 440/1054 [00:43<00:51, 12.02it/s]Testing:  42%|████▏     | 442/1054 [00:43<00:54, 11.25it/s]Testing:  42%|████▏     | 444/1054 [00:43<01:02,  9.82it/s]Testing:  42%|████▏     | 446/1054 [00:43<01:00, 10.00it/s]Testing:  43%|████▎     | 448/1054 [00:44<01:00, 10.04it/s]Testing:  43%|████▎     | 450/1054 [00:44<01:00,  9.96it/s]Testing:  43%|████▎     | 452/1054 [00:44<01:01,  9.86it/s]Testing:  43%|████▎     | 454/1054 [00:44<01:02,  9.62it/s]Testing:  43%|████▎     | 455/1054 [00:44<01:02,  9.54it/s]Testing:  43%|████▎     | 457/1054 [00:44<00:57, 10.37it/s]Testing:  44%|████▎     | 459/1054 [00:45<00:54, 11.01it/s]
Proof Accuracy: 99.8913043478261

Testing:  44%|████▎     | 461/1054 [00:45<00:52, 11.24it/s]Testing:  44%|████▍     | 463/1054 [00:45<00:52, 11.21it/s]Testing:  44%|████▍     | 465/1054 [00:45<00:50, 11.59it/s]Testing:  44%|████▍     | 467/1054 [00:45<00:47, 12.33it/s]Testing:  44%|████▍     | 469/1054 [00:45<00:49, 11.80it/s]Testing:  45%|████▍     | 471/1054 [00:46<00:59,  9.83it/s]Testing:  45%|████▍     | 473/1054 [00:46<00:57, 10.14it/s]Testing:  45%|████▌     | 475/1054 [00:46<00:55, 10.42it/s]Testing:  45%|████▌     | 477/1054 [00:46<00:50, 11.39it/s]Testing:  45%|████▌     | 479/1054 [00:46<00:51, 11.20it/s]
Proof Accuracy: 99.89583333333333

Testing:  46%|████▌     | 481/1054 [00:47<00:50, 11.36it/s]Testing:  46%|████▌     | 483/1054 [00:47<00:49, 11.62it/s]Testing:  46%|████▌     | 485/1054 [00:47<00:52, 10.80it/s]Testing:  46%|████▌     | 487/1054 [00:47<00:53, 10.67it/s]Testing:  46%|████▋     | 489/1054 [00:47<00:52, 10.80it/s]Testing:  47%|████▋     | 491/1054 [00:48<00:49, 11.42it/s]Testing:  47%|████▋     | 493/1054 [00:48<00:52, 10.70it/s]Testing:  47%|████▋     | 495/1054 [00:48<00:49, 11.36it/s]Testing:  47%|████▋     | 497/1054 [00:48<00:49, 11.18it/s]Testing:  47%|████▋     | 499/1054 [00:48<00:51, 10.83it/s]
Proof Accuracy: 99.9

Testing:  48%|████▊     | 501/1054 [00:48<00:47, 11.54it/s]Testing:  48%|████▊     | 503/1054 [00:49<00:48, 11.38it/s]Testing:  48%|████▊     | 505/1054 [00:49<00:46, 11.81it/s]Testing:  48%|████▊     | 507/1054 [00:49<00:45, 12.04it/s]Testing:  48%|████▊     | 509/1054 [00:49<00:45, 11.87it/s]Testing:  48%|████▊     | 511/1054 [00:49<00:47, 11.46it/s]Testing:  49%|████▊     | 513/1054 [00:49<00:50, 10.65it/s]Testing:  49%|████▉     | 515/1054 [00:50<00:47, 11.24it/s]Testing:  49%|████▉     | 517/1054 [00:50<00:50, 10.67it/s]Testing:  49%|████▉     | 519/1054 [00:50<00:46, 11.52it/s]
Proof Accuracy: 99.90384615384616

Testing:  49%|████▉     | 521/1054 [00:50<00:49, 10.69it/s]Testing:  50%|████▉     | 523/1054 [00:50<00:47, 11.17it/s]Testing:  50%|████▉     | 525/1054 [00:51<00:48, 10.90it/s]Testing:  50%|█████     | 527/1054 [00:51<00:47, 11.11it/s]Testing:  50%|█████     | 529/1054 [00:51<00:47, 11.00it/s]Testing:  50%|█████     | 531/1054 [00:51<00:45, 11.49it/s]Testing:  51%|█████     | 533/1054 [00:51<00:45, 11.46it/s]Testing:  51%|█████     | 535/1054 [00:51<00:45, 11.40it/s]Testing:  51%|█████     | 537/1054 [00:52<00:46, 11.14it/s]Testing:  51%|█████     | 539/1054 [00:52<00:42, 12.17it/s]
Proof Accuracy: 99.89583333333333

Testing:  51%|█████▏    | 541/1054 [00:52<00:39, 12.94it/s]Testing:  52%|█████▏    | 543/1054 [00:52<00:39, 13.07it/s]Testing:  52%|█████▏    | 545/1054 [00:52<00:41, 12.33it/s]Testing:  52%|█████▏    | 547/1054 [00:52<00:46, 10.84it/s]Testing:  52%|█████▏    | 549/1054 [00:53<00:47, 10.54it/s]Testing:  52%|█████▏    | 551/1054 [00:53<00:47, 10.49it/s]Testing:  52%|█████▏    | 553/1054 [00:53<00:46, 10.81it/s]Testing:  53%|█████▎    | 555/1054 [00:53<00:42, 11.67it/s]Testing:  53%|█████▎    | 557/1054 [00:53<00:44, 11.18it/s]Testing:  53%|█████▎    | 559/1054 [00:53<00:38, 12.81it/s]
Proof Accuracy: 99.89955357142857

Testing:  53%|█████▎    | 561/1054 [00:54<00:39, 12.34it/s]Testing:  53%|█████▎    | 563/1054 [00:54<00:43, 11.28it/s]Testing:  54%|█████▎    | 565/1054 [00:54<00:45, 10.75it/s]Testing:  54%|█████▍    | 567/1054 [00:54<00:44, 11.03it/s]Testing:  54%|█████▍    | 569/1054 [00:54<00:46, 10.52it/s]Testing:  54%|█████▍    | 571/1054 [00:55<00:47, 10.18it/s]Testing:  54%|█████▍    | 573/1054 [00:55<00:42, 11.38it/s]Testing:  55%|█████▍    | 575/1054 [00:55<00:40, 11.83it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:59: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 38. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
  warning_cache.warn(
Testing:  55%|█████▍    | 577/1054 [00:55<00:40, 11.73it/s]Testing:  55%|█████▍    | 579/1054 [00:56<01:00,  7.82it/s]
Proof Accuracy: 99.90301724137932

Testing:  55%|█████▌    | 582/1054 [00:56<00:48,  9.65it/s]Testing:  55%|█████▌    | 584/1054 [00:56<00:43, 10.79it/s]Testing:  56%|█████▌    | 586/1054 [00:56<00:42, 11.02it/s]Testing:  56%|█████▌    | 588/1054 [00:56<00:44, 10.36it/s]Testing:  56%|█████▌    | 590/1054 [00:56<00:45, 10.29it/s]Testing:  56%|█████▌    | 592/1054 [00:57<00:43, 10.53it/s]Testing:  56%|█████▋    | 594/1054 [00:57<00:39, 11.69it/s]Testing:  57%|█████▋    | 596/1054 [00:57<00:39, 11.58it/s]Testing:  57%|█████▋    | 598/1054 [00:57<00:37, 12.18it/s]
Proof Accuracy: 99.90625

Testing:  57%|█████▋    | 600/1054 [00:57<00:38, 11.92it/s]Testing:  57%|█████▋    | 602/1054 [00:57<00:40, 11.28it/s]Testing:  57%|█████▋    | 604/1054 [00:58<00:35, 12.64it/s]Testing:  57%|█████▋    | 606/1054 [00:58<00:37, 11.97it/s]Testing:  58%|█████▊    | 608/1054 [00:58<00:37, 11.81it/s]Testing:  58%|█████▊    | 610/1054 [00:58<00:36, 12.33it/s]Testing:  58%|█████▊    | 612/1054 [00:58<00:40, 10.97it/s]Testing:  58%|█████▊    | 614/1054 [00:58<00:38, 11.31it/s]Testing:  58%|█████▊    | 616/1054 [00:59<00:40, 10.82it/s]Testing:  59%|█████▊    | 618/1054 [00:59<00:38, 11.32it/s]
Proof Accuracy: 99.8991935483871

Testing:  59%|█████▉    | 620/1054 [00:59<00:42, 10.28it/s]Testing:  59%|█████▉    | 622/1054 [00:59<00:47,  9.18it/s]Testing:  59%|█████▉    | 624/1054 [00:59<00:42, 10.15it/s]Testing:  59%|█████▉    | 626/1054 [01:00<00:43,  9.89it/s]Testing:  60%|█████▉    | 628/1054 [01:00<00:43,  9.78it/s]Testing:  60%|█████▉    | 630/1054 [01:00<00:39, 10.68it/s]Testing:  60%|█████▉    | 632/1054 [01:00<00:37, 11.23it/s]Testing:  60%|██████    | 634/1054 [01:00<00:34, 12.08it/s]Testing:  60%|██████    | 636/1054 [01:01<00:38, 10.87it/s]Testing:  61%|██████    | 638/1054 [01:01<00:34, 11.89it/s]
Proof Accuracy: 99.90234375

Testing:  61%|██████    | 640/1054 [01:01<00:40, 10.11it/s]Testing:  61%|██████    | 642/1054 [01:01<00:38, 10.67it/s]Testing:  61%|██████    | 644/1054 [01:01<00:41,  9.87it/s]Testing:  61%|██████▏   | 646/1054 [01:02<00:40, 10.20it/s]Testing:  61%|██████▏   | 648/1054 [01:02<00:35, 11.28it/s]Testing:  62%|██████▏   | 650/1054 [01:02<00:39, 10.30it/s]Testing:  62%|██████▏   | 652/1054 [01:02<00:40,  9.84it/s]Testing:  62%|██████▏   | 654/1054 [01:02<00:36, 10.99it/s]Testing:  62%|██████▏   | 656/1054 [01:02<00:32, 12.26it/s]Testing:  62%|██████▏   | 658/1054 [01:03<00:33, 11.77it/s]
Proof Accuracy: 99.90530303030303

Testing:  63%|██████▎   | 660/1054 [01:03<00:35, 11.15it/s]Testing:  63%|██████▎   | 662/1054 [01:03<00:35, 11.04it/s]Testing:  63%|██████▎   | 664/1054 [01:03<00:35, 11.02it/s]Testing:  63%|██████▎   | 666/1054 [01:03<00:36, 10.63it/s]Testing:  63%|██████▎   | 668/1054 [01:03<00:33, 11.38it/s]Testing:  64%|██████▎   | 670/1054 [01:04<00:37, 10.38it/s]Testing:  64%|██████▍   | 672/1054 [01:04<00:37, 10.16it/s]Testing:  64%|██████▍   | 674/1054 [01:04<00:33, 11.25it/s]Testing:  64%|██████▍   | 676/1054 [01:04<00:30, 12.20it/s]Testing:  64%|██████▍   | 678/1054 [01:04<00:30, 12.52it/s]
Proof Accuracy: 99.90808823529412

Testing:  65%|██████▍   | 680/1054 [01:04<00:28, 13.18it/s]Testing:  65%|██████▍   | 682/1054 [01:05<00:29, 12.83it/s]Testing:  65%|██████▍   | 684/1054 [01:05<00:30, 12.12it/s]Testing:  65%|██████▌   | 686/1054 [01:05<00:30, 12.25it/s]Testing:  65%|██████▌   | 688/1054 [01:05<00:31, 11.72it/s]Testing:  65%|██████▌   | 690/1054 [01:05<00:32, 11.32it/s]Testing:  66%|██████▌   | 692/1054 [01:05<00:29, 12.27it/s]Testing:  66%|██████▌   | 694/1054 [01:06<00:29, 12.36it/s]Testing:  66%|██████▌   | 696/1054 [01:06<00:30, 11.70it/s]Testing:  66%|██████▌   | 698/1054 [01:06<00:29, 12.26it/s]
Proof Accuracy: 99.90178571428571

Testing:  66%|██████▋   | 700/1054 [01:06<00:28, 12.52it/s]Testing:  67%|██████▋   | 702/1054 [01:06<00:27, 12.80it/s]Testing:  67%|██████▋   | 704/1054 [01:07<00:33, 10.41it/s]Testing:  67%|██████▋   | 706/1054 [01:07<00:37,  9.26it/s]Testing:  67%|██████▋   | 708/1054 [01:07<00:39,  8.83it/s]Testing:  67%|██████▋   | 710/1054 [01:07<00:37,  9.11it/s]Testing:  68%|██████▊   | 712/1054 [01:07<00:35,  9.61it/s]Testing:  68%|██████▊   | 713/1054 [01:08<00:35,  9.50it/s]Testing:  68%|██████▊   | 714/1054 [01:08<00:39,  8.58it/s]Testing:  68%|██████▊   | 716/1054 [01:08<00:37,  9.07it/s]Testing:  68%|██████▊   | 717/1054 [01:08<00:36,  9.12it/s]Testing:  68%|██████▊   | 719/1054 [01:08<00:33, 10.00it/s]
Proof Accuracy: 99.90451388888889

Testing:  68%|██████▊   | 721/1054 [01:08<00:30, 10.86it/s]Testing:  69%|██████▊   | 723/1054 [01:08<00:31, 10.64it/s]Testing:  69%|██████▉   | 725/1054 [01:09<00:31, 10.29it/s]Testing:  69%|██████▉   | 727/1054 [01:09<00:33,  9.84it/s]Testing:  69%|██████▉   | 729/1054 [01:09<00:35,  9.06it/s]Testing:  69%|██████▉   | 731/1054 [01:09<00:33,  9.61it/s]Testing:  69%|██████▉   | 732/1054 [01:09<00:33,  9.48it/s]Testing:  70%|██████▉   | 733/1054 [01:10<00:34,  9.35it/s]Testing:  70%|██████▉   | 735/1054 [01:10<00:34,  9.12it/s]Testing:  70%|██████▉   | 737/1054 [01:10<00:33,  9.60it/s]Testing:  70%|███████   | 738/1054 [01:10<00:33,  9.37it/s]
Proof Accuracy: 99.9070945945946

Testing:  70%|███████   | 740/1054 [01:10<00:31,  9.99it/s]Testing:  70%|███████   | 742/1054 [01:10<00:28, 11.12it/s]Testing:  71%|███████   | 744/1054 [01:11<00:24, 12.41it/s]Testing:  71%|███████   | 746/1054 [01:11<00:27, 11.09it/s]Testing:  71%|███████   | 748/1054 [01:11<00:30, 10.00it/s]Testing:  71%|███████   | 750/1054 [01:11<00:27, 11.18it/s]Testing:  71%|███████▏  | 752/1054 [01:11<00:28, 10.64it/s]Testing:  72%|███████▏  | 754/1054 [01:12<00:29, 10.33it/s]Testing:  72%|███████▏  | 756/1054 [01:12<00:33,  9.02it/s]Testing:  72%|███████▏  | 758/1054 [01:12<00:31,  9.36it/s]
Proof Accuracy: 99.9095394736842

Testing:  72%|███████▏  | 760/1054 [01:12<00:29,  9.87it/s]Testing:  72%|███████▏  | 762/1054 [01:12<00:27, 10.75it/s]Testing:  72%|███████▏  | 764/1054 [01:13<00:28, 10.15it/s]Testing:  73%|███████▎  | 766/1054 [01:13<00:25, 11.26it/s]Testing:  73%|███████▎  | 768/1054 [01:13<00:24, 11.90it/s]Testing:  73%|███████▎  | 770/1054 [01:13<00:23, 11.94it/s]Testing:  73%|███████▎  | 772/1054 [01:13<00:23, 11.82it/s]Testing:  73%|███████▎  | 774/1054 [01:13<00:25, 10.81it/s]Testing:  74%|███████▎  | 776/1054 [01:14<00:25, 10.78it/s]Testing:  74%|███████▍  | 778/1054 [01:14<00:26, 10.42it/s]
Proof Accuracy: 99.91185897435898

Testing:  74%|███████▍  | 780/1054 [01:14<00:27, 10.08it/s]Testing:  74%|███████▍  | 782/1054 [01:14<00:29,  9.37it/s]Testing:  74%|███████▍  | 783/1054 [01:14<00:32,  8.45it/s]Testing:  74%|███████▍  | 785/1054 [01:15<00:28,  9.56it/s]Testing:  75%|███████▍  | 787/1054 [01:15<00:27,  9.74it/s]Testing:  75%|███████▍  | 789/1054 [01:15<00:26, 10.16it/s]Testing:  75%|███████▌  | 791/1054 [01:15<00:25, 10.50it/s]Testing:  75%|███████▌  | 793/1054 [01:15<00:22, 11.59it/s]Testing:  75%|███████▌  | 795/1054 [01:15<00:23, 10.97it/s]Testing:  76%|███████▌  | 797/1054 [01:16<00:22, 11.50it/s]Testing:  76%|███████▌  | 799/1054 [01:16<00:23, 10.74it/s]
Proof Accuracy: 99.9140625

Testing:  76%|███████▌  | 801/1054 [01:16<00:25,  9.96it/s]Testing:  76%|███████▌  | 803/1054 [01:16<00:23, 10.70it/s]Testing:  76%|███████▋  | 805/1054 [01:16<00:24, 10.17it/s]Testing:  77%|███████▋  | 807/1054 [01:17<00:25,  9.58it/s]Testing:  77%|███████▋  | 808/1054 [01:17<00:25,  9.54it/s]Testing:  77%|███████▋  | 809/1054 [01:17<00:26,  9.40it/s]Testing:  77%|███████▋  | 810/1054 [01:17<00:25,  9.56it/s]Testing:  77%|███████▋  | 811/1054 [01:17<00:28,  8.61it/s]Testing:  77%|███████▋  | 812/1054 [01:17<00:27,  8.93it/s]Testing:  77%|███████▋  | 813/1054 [01:17<00:26,  9.22it/s]Testing:  77%|███████▋  | 815/1054 [01:17<00:23, 10.32it/s]Testing:  78%|███████▊  | 817/1054 [01:18<00:22, 10.46it/s]Testing:  78%|███████▊  | 819/1054 [01:18<00:23, 10.10it/s]
Proof Accuracy: 99.91615853658537

Testing:  78%|███████▊  | 821/1054 [01:18<00:22, 10.40it/s]Testing:  78%|███████▊  | 823/1054 [01:18<00:22, 10.14it/s]Testing:  78%|███████▊  | 825/1054 [01:19<00:24,  9.37it/s]Testing:  78%|███████▊  | 827/1054 [01:19<00:22,  9.95it/s]Testing:  79%|███████▊  | 829/1054 [01:19<00:21, 10.45it/s]Testing:  79%|███████▉  | 831/1054 [01:19<00:24,  9.17it/s]Testing:  79%|███████▉  | 833/1054 [01:19<00:22,  9.78it/s]Testing:  79%|███████▉  | 835/1054 [01:19<00:19, 11.20it/s]Testing:  79%|███████▉  | 837/1054 [01:20<00:20, 10.64it/s]Testing:  80%|███████▉  | 839/1054 [01:20<00:19, 10.78it/s]
Proof Accuracy: 99.91071428571429

Testing:  80%|███████▉  | 841/1054 [01:20<00:20, 10.64it/s]Testing:  80%|███████▉  | 843/1054 [01:20<00:18, 11.64it/s]Testing:  80%|████████  | 845/1054 [01:20<00:16, 12.43it/s]Testing:  80%|████████  | 847/1054 [01:21<00:19, 10.62it/s]Testing:  81%|████████  | 849/1054 [01:21<00:18, 10.87it/s]Testing:  81%|████████  | 851/1054 [01:21<00:17, 11.34it/s]Testing:  81%|████████  | 853/1054 [01:21<00:27,  7.30it/s]Testing:  81%|████████  | 854/1054 [01:22<00:40,  4.92it/s]Testing:  81%|████████  | 856/1054 [01:22<00:33,  5.92it/s]Testing:  81%|████████▏ | 857/1054 [01:22<00:31,  6.27it/s]Testing:  81%|████████▏ | 859/1054 [01:22<00:25,  7.50it/s]
Proof Accuracy: 99.90552325581395

Testing:  82%|████████▏ | 861/1054 [01:22<00:21,  8.95it/s]Testing:  82%|████████▏ | 863/1054 [01:23<00:20,  9.14it/s]Testing:  82%|████████▏ | 865/1054 [01:23<00:19,  9.76it/s]Testing:  82%|████████▏ | 867/1054 [01:23<00:19,  9.46it/s]Testing:  82%|████████▏ | 869/1054 [01:23<00:19,  9.47it/s]Testing:  83%|████████▎ | 871/1054 [01:23<00:17, 10.51it/s]Testing:  83%|████████▎ | 873/1054 [01:23<00:17, 10.08it/s]Testing:  83%|████████▎ | 875/1054 [01:24<00:18,  9.57it/s]Testing:  83%|████████▎ | 877/1054 [01:24<00:17, 10.12it/s]Testing:  83%|████████▎ | 879/1054 [01:24<00:18,  9.60it/s]
Proof Accuracy: 99.90767045454545

Testing:  84%|████████▎ | 881/1054 [01:24<00:17, 10.00it/s]Testing:  84%|████████▍ | 883/1054 [01:24<00:16, 10.25it/s]Testing:  84%|████████▍ | 885/1054 [01:25<00:16, 10.29it/s]Testing:  84%|████████▍ | 887/1054 [01:25<00:14, 11.66it/s]Testing:  84%|████████▍ | 889/1054 [01:25<00:14, 11.32it/s]Testing:  85%|████████▍ | 891/1054 [01:25<00:14, 10.91it/s]Testing:  85%|████████▍ | 893/1054 [01:25<00:14, 11.04it/s]Testing:  85%|████████▍ | 895/1054 [01:26<00:15, 10.52it/s]Testing:  85%|████████▌ | 897/1054 [01:26<00:14, 10.99it/s]Testing:  85%|████████▌ | 899/1054 [01:26<00:15,  9.72it/s]
Proof Accuracy: 99.90972222222223

Testing:  85%|████████▌ | 901/1054 [01:26<00:16,  9.19it/s]Testing:  86%|████████▌ | 902/1054 [01:26<00:16,  9.24it/s]Testing:  86%|████████▌ | 904/1054 [01:27<00:16,  9.03it/s]Testing:  86%|████████▌ | 906/1054 [01:27<00:14, 10.50it/s]Testing:  86%|████████▌ | 908/1054 [01:27<00:13, 10.59it/s]Testing:  86%|████████▋ | 910/1054 [01:27<00:13, 10.61it/s]Testing:  87%|████████▋ | 912/1054 [01:27<00:14, 10.11it/s]Testing:  87%|████████▋ | 914/1054 [01:27<00:12, 10.92it/s]Testing:  87%|████████▋ | 916/1054 [01:28<00:12, 11.04it/s]Testing:  87%|████████▋ | 918/1054 [01:28<00:11, 11.62it/s]
Proof Accuracy: 99.90489130434783

Testing:  87%|████████▋ | 920/1054 [01:28<00:11, 11.62it/s]Testing:  87%|████████▋ | 922/1054 [01:28<00:13, 10.10it/s]Testing:  88%|████████▊ | 925/1054 [01:28<00:11, 10.99it/s]Testing:  88%|████████▊ | 927/1054 [01:29<00:12, 10.26it/s]Testing:  88%|████████▊ | 929/1054 [01:29<00:11, 11.05it/s]Testing:  88%|████████▊ | 931/1054 [01:29<00:11, 10.33it/s]Testing:  89%|████████▊ | 933/1054 [01:29<00:12,  9.54it/s]Testing:  89%|████████▊ | 935/1054 [01:29<00:11, 10.37it/s]Testing:  89%|████████▉ | 937/1054 [01:30<00:10, 10.73it/s]Testing:  89%|████████▉ | 939/1054 [01:30<00:10, 10.58it/s]
Proof Accuracy: 99.90691489361703

Testing:  89%|████████▉ | 941/1054 [01:30<00:10, 11.22it/s]Testing:  89%|████████▉ | 943/1054 [01:30<00:10, 11.10it/s]Testing:  90%|████████▉ | 945/1054 [01:30<00:09, 11.10it/s]Testing:  90%|████████▉ | 947/1054 [01:31<00:10, 10.41it/s]Testing:  90%|█████████ | 949/1054 [01:31<00:09, 10.79it/s]Testing:  90%|█████████ | 951/1054 [01:31<00:08, 11.55it/s]Testing:  90%|█████████ | 953/1054 [01:31<00:08, 11.24it/s]Testing:  91%|█████████ | 955/1054 [01:31<00:08, 11.75it/s]Testing:  91%|█████████ | 957/1054 [01:31<00:07, 12.44it/s]Testing:  91%|█████████ | 959/1054 [01:32<00:08, 10.99it/s]
Proof Accuracy: 99.90885416666667

Testing:  91%|█████████ | 961/1054 [01:32<00:08, 11.02it/s]Testing:  91%|█████████▏| 963/1054 [01:32<00:07, 11.94it/s]Testing:  92%|█████████▏| 965/1054 [01:32<00:07, 11.34it/s]Testing:  92%|█████████▏| 967/1054 [01:32<00:07, 12.28it/s]Testing:  92%|█████████▏| 969/1054 [01:32<00:06, 12.48it/s]Testing:  92%|█████████▏| 971/1054 [01:33<00:07, 11.37it/s]Testing:  92%|█████████▏| 973/1054 [01:33<00:07, 11.27it/s]Testing:  93%|█████████▎| 975/1054 [01:33<00:06, 11.90it/s]Testing:  93%|█████████▎| 977/1054 [01:33<00:07, 10.91it/s]Testing:  93%|█████████▎| 979/1054 [01:33<00:07, 10.59it/s]
Proof Accuracy: 99.91071428571429

Testing:  93%|█████████▎| 981/1054 [01:33<00:06, 11.00it/s]Testing:  93%|█████████▎| 983/1054 [01:34<00:06, 10.85it/s]Testing:  93%|█████████▎| 985/1054 [01:34<00:06, 10.93it/s]Testing:  94%|█████████▎| 987/1054 [01:34<00:05, 11.61it/s]Testing:  94%|█████████▍| 989/1054 [01:34<00:05, 10.88it/s]Testing:  94%|█████████▍| 991/1054 [01:34<00:05, 11.65it/s]Testing:  94%|█████████▍| 993/1054 [01:35<00:05, 10.65it/s]Testing:  94%|█████████▍| 995/1054 [01:35<00:05, 11.38it/s]Testing:  95%|█████████▍| 997/1054 [01:35<00:04, 12.01it/s]Testing:  95%|█████████▍| 999/1054 [01:35<00:04, 11.85it/s]
Proof Accuracy: 99.9125

Testing:  95%|█████████▍| 1001/1054 [01:35<00:04, 10.93it/s]Testing:  95%|█████████▌| 1003/1054 [01:35<00:04, 10.69it/s]Testing:  95%|█████████▌| 1005/1054 [01:36<00:04, 10.84it/s]Testing:  96%|█████████▌| 1007/1054 [01:36<00:04, 11.28it/s]Testing:  96%|█████████▌| 1009/1054 [01:36<00:04, 10.43it/s]Testing:  96%|█████████▌| 1011/1054 [01:36<00:04, 10.46it/s]Testing:  96%|█████████▌| 1013/1054 [01:36<00:04, 10.08it/s]Testing:  96%|█████████▋| 1015/1054 [01:37<00:03, 10.14it/s]Testing:  96%|█████████▋| 1017/1054 [01:37<00:03, 10.56it/s]Testing:  97%|█████████▋| 1019/1054 [01:37<00:03, 10.83it/s]
Proof Accuracy: 99.91421568627452

Testing:  97%|█████████▋| 1021/1054 [01:37<00:03, 10.21it/s]Testing:  97%|█████████▋| 1023/1054 [01:37<00:03, 10.06it/s]Testing:  97%|█████████▋| 1025/1054 [01:38<00:02,  9.88it/s]Testing:  97%|█████████▋| 1026/1054 [01:38<00:02,  9.49it/s]Testing:  98%|█████████▊| 1028/1054 [01:38<00:02, 10.58it/s]Testing:  98%|█████████▊| 1030/1054 [01:38<00:02, 10.74it/s]Testing:  98%|█████████▊| 1032/1054 [01:38<00:02, 10.05it/s]Testing:  98%|█████████▊| 1034/1054 [01:38<00:01, 10.17it/s]Testing:  98%|█████████▊| 1036/1054 [01:39<00:01, 10.65it/s]Testing:  98%|█████████▊| 1038/1054 [01:39<00:01, 12.13it/s]
Proof Accuracy: 99.91586538461539

Testing:  99%|█████████▊| 1040/1054 [01:39<00:01, 11.20it/s]Testing:  99%|█████████▉| 1042/1054 [01:39<00:01, 10.61it/s]Testing:  99%|█████████▉| 1044/1054 [01:39<00:00, 10.26it/s]Testing:  99%|█████████▉| 1046/1054 [01:39<00:00, 11.28it/s]Testing:  99%|█████████▉| 1048/1054 [01:40<00:00, 10.26it/s]Testing: 100%|█████████▉| 1050/1054 [01:40<00:00, 10.63it/s]Testing: 100%|█████████▉| 1052/1054 [01:40<00:00,  9.25it/s]Testing: 100%|█████████▉| 1053/1054 [01:40<00:00,  9.10it/s]Testing: 100%|██████████| 1054/1054 [01:41<00:00,  5.77it/s]/home/data1/linkiling/.conda/envs/wjn_py_3.9/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/logger_connector/result.py:220: UserWarning: You called `self.log('Graph Cycle Errors: ', ...)` in your `test_epoch_end` but the value needs to be floating point. Converting it to torch.float32.
  warning_cache.warn(
--------------------------------------------------------------------------------
DATALOADER:0 TEST RESULTS
{'Graph Cycle Errors: ': 0.0,
 'test_ans_acc_epoch': 99.91698455810547,
 'test_ans_acc_step': 99.92172241210938,
 'test_prf_acc_epoch': 99.91698455810547,
 'test_prf_acc_step': 99.92172241210938}
--------------------------------------------------------------------------------
Testing: 100%|██████████| 1054/1054 [01:41<00:00, 10.42it/s]
Time Taken for experiment fairr_inference_pwur_leq_3_eq_0_name_OWA_None_05_12_2023_2e27bc6a: 0.060771429869863725h
